{"ast":null,"code":"const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\nconst validLettersAndNumbers = new RegExp(/^(?=.*[a-z])(?=.*[0-9])/);\nexport const validate = inputs => {\n  //inputs\n  const errors = {};\n  if (!regexEmail.test(inputs.userName)) {\n    /*si no es un formato de email*/\n    errors.userName = \"Debe ser un email\";\n  }\n  if (!inputs.userName) {\n    errors.userName = \"No puede ser vacio\";\n  }\n  if (inputs.userName.length > 35) {\n    errors.userName = \"no pueden haber mas de 35 caracteres\";\n  }\n  if (!validLettersAndNumbers.test(inputs.password)) {\n    errors.password = \"Debe contener almenos un numero\";\n  }\n  if (inputs.password.length < 6 || inputs.password.length > 10) {\n    errors.password = \"Debe tener de 6 a 10 caracteres\";\n  }\n  return errors; // se retorna el objto estado \"error\" con la propiedad name segun el if al que entre\n};","map":{"version":3,"names":["regexEmail","validLettersAndNumbers","RegExp","validate","inputs","errors","test","userName","length","password"],"sources":["C:/Boludeo/Henry/FT-M2-master/Proyecto integrador/rick_and_morty/src/components/form/validation.js"],"sourcesContent":["const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    const validLettersAndNumbers = new RegExp(/^(?=.*[a-z])(?=.*[0-9])/);\r\n\r\n    export const validate =(inputs) =>{\r\n        //inputs\r\n        const errors = {}\r\n        if(!regexEmail.test(inputs.userName)){/*si no es un formato de email*/\r\n            errors.userName= \"Debe ser un email\";\r\n        }\r\n        if(!inputs.userName){\r\n            errors.userName =\"No puede ser vacio\";\r\n        }\r\n        if(inputs.userName.length > 35){\r\n            errors.userName =\"no pueden haber mas de 35 caracteres\";\r\n        }\r\n        if(!validLettersAndNumbers.test(inputs.password)){\r\n            errors.password = \"Debe contener almenos un numero\";\r\n        }\r\n        if(inputs.password.length < 6 || inputs.password.length > 10 ){\r\n            errors.password = \"Debe tener de 6 a 10 caracteres\";\r\n        }\r\n        return errors; // se retorna el objto estado \"error\" con la propiedad name segun el if al que entre\r\n    };"],"mappings":"AAAA,MAAMA,UAAU,GAAG,2CAA2C;AAC1D,MAAMC,sBAAsB,GAAG,IAAIC,MAAM,CAAC,yBAAyB,CAAC;AAEpE,OAAO,MAAMC,QAAQ,GAAGC,MAAM,IAAI;EAC9B;EACA,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,IAAG,CAACL,UAAU,CAACM,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,EAAC;IAAC;IAClCF,MAAM,CAACE,QAAQ,GAAE,mBAAmB;EACxC;EACA,IAAG,CAACH,MAAM,CAACG,QAAQ,EAAC;IAChBF,MAAM,CAACE,QAAQ,GAAE,oBAAoB;EACzC;EACA,IAAGH,MAAM,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAC;IAC3BH,MAAM,CAACE,QAAQ,GAAE,sCAAsC;EAC3D;EACA,IAAG,CAACN,sBAAsB,CAACK,IAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,EAAC;IAC7CJ,MAAM,CAACI,QAAQ,GAAG,iCAAiC;EACvD;EACA,IAAGL,MAAM,CAACK,QAAQ,CAACD,MAAM,GAAG,CAAC,IAAIJ,MAAM,CAACK,QAAQ,CAACD,MAAM,GAAG,EAAE,EAAE;IAC1DH,MAAM,CAACI,QAAQ,GAAG,iCAAiC;EACvD;EACA,OAAOJ,MAAM,CAAC,CAAC;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}